# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import re
import Lacp as l
from PyQt5.QtGui import QStandardItem
from PyQt5.QtWidgets import QTableWidgetItem


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1061, 676)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(980, 390, 75, 23))
        self.pushButton.clicked.connect(self.on_click_clear)
        self.pushButton.setObjectName("pushButton")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 10, 961, 401))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)

        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 410, 1051, 231))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.dst = QtWidgets.QLabel(self.groupBox)
        self.dst.setGeometry(QtCore.QRect(50, 30, 47, 13))
        self.dst.setObjectName("dst")
        self.dst_edit = QtWidgets.QLineEdit(self.groupBox)
        self.dst_edit.setGeometry(QtCore.QRect(10, 50, 141, 21))
        self.dst_edit.setObjectName("dst_edit")
        self.src = QtWidgets.QLabel(self.groupBox)
        self.src.setGeometry(QtCore.QRect(250, 30, 47, 13))
        self.src.setObjectName("src")
        self.src_edit = QtWidgets.QLineEdit(self.groupBox)
        self.src_edit.setGeometry(QtCore.QRect(190, 50, 151, 21))
        self.src_edit.setObjectName("src_edit")
        self.data = QtWidgets.QLabel(self.groupBox)
        self.data.setGeometry(QtCore.QRect(460, 30, 47, 13))
        self.data.setObjectName("data")
        self.data_edit = QtWidgets.QLineEdit(self.groupBox)
        self.data_edit.setGeometry(QtCore.QRect(380, 50, 211, 21))
        self.data_edit.setObjectName("data_edit")
        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_3.setGeometry(QtCore.QRect(380, 160, 75, 23))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.on_click)  # соединение сигнала и слота (сигнал clicked и слот on_click)
        self.groupBox_2 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_2.setGeometry(QtCore.QRect(180, 90, 161, 121))
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.partner_radioButton = QtWidgets.QRadioButton(self.groupBox_2)
        self.partner_radioButton.setGeometry(QtCore.QRect(20, 50, 82, 17))
        self.partner_radioButton.setObjectName("partner_radioButton")
        self.partner_radioButton2 = QtWidgets.QRadioButton(self.groupBox_2)
        self.partner_radioButton2.setGeometry(QtCore.QRect(20, 80, 82, 17))
        self.partner_radioButton2.setObjectName("partner_radioButton2")
        self.partner_state = QtWidgets.QLabel(self.groupBox_2)
        self.partner_state.setGeometry(QtCore.QRect(20, 20, 71, 16))
        self.partner_state.setObjectName("partner_state")
        self.groupBox_3 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_3.setGeometry(QtCore.QRect(10, 90, 141, 121))
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.actor_radioButton2 = QtWidgets.QRadioButton(self.groupBox_3)
        self.actor_radioButton2.setGeometry(QtCore.QRect(20, 80, 82, 17))
        self.actor_radioButton2.setObjectName("actor_radioButton2")
        self.actor_radioButton = QtWidgets.QRadioButton(self.groupBox_3)
        self.actor_radioButton.setGeometry(QtCore.QRect(20, 50, 82, 17))
        self.actor_radioButton.setObjectName("actor_radioButton")
        self.actor_state = QtWidgets.QLabel(self.groupBox_3)
        self.actor_state.setGeometry(QtCore.QRect(20, 20, 61, 16))
        self.actor_state.setObjectName("actor_state")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1061, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actor_radioButton2.setChecked(True)
        self.partner_radioButton.setChecked(True)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)




    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Отчистить"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "dst"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "src"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "subtype"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "type"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "data"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "actor_state"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "partner_state"))
        self.tableWidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        self.dst.setText(_translate("MainWindow", "dst"))
        self.src.setText(_translate("MainWindow", "src"))
        self.data.setText(_translate("MainWindow", "data"))
        self.pushButton_3.setText(_translate("MainWindow", "Отправить"))
        self.partner_radioButton.setText(_translate("MainWindow", "Passive"))
        self.partner_radioButton2.setText(_translate("MainWindow", "Active"))
        self.partner_state.setText(_translate("MainWindow", "partner_state"))
        self.actor_radioButton2.setText(_translate("MainWindow", "Active"))
        self.actor_radioButton.setText(_translate("MainWindow", "Passive"))
        self.actor_state.setText(_translate("MainWindow", "actor_state"))



    def add_row(self):
        dst = self.dst_edit.text()
        src = self.src_edit.text()
        data = self.data_edit.text()

        rowPosition = self.tableWidget.rowCount()
        self.tableWidget.insertRow(rowPosition)

        if (self.actor_radioButton.isChecked()):
            actor_state = 0
            actor_state_print ="Passive"
        else:
            actor_state = 133
            actor_state_print = "Active"
        if (self.partner_radioButton.isChecked()):
            partner_state = 0
            partner_state_print = "Passive"
        else:
            partner_state = 54
            partner_state_print = "Active"
        self.tableWidget.setItem(rowPosition, 0, QtWidgets.QTableWidgetItem(dst))
        self.tableWidget.setItem(rowPosition, 1, QtWidgets.QTableWidgetItem(src))
        self.tableWidget.setItem(rowPosition, 2, QtWidgets.QTableWidgetItem("SLOW"))
        self.tableWidget.setItem(rowPosition, 3, QtWidgets.QTableWidgetItem("LACP"))
        self.tableWidget.setItem(rowPosition, 4, QtWidgets.QTableWidgetItem(data))
        self.tableWidget.setItem(rowPosition, 5, QtWidgets.QTableWidgetItem(actor_state_print))
        self.tableWidget.setItem(rowPosition, 6, QtWidgets.QTableWidgetItem(partner_state_print))
        l.scan(dst,src, "Get info//"+data,actor_state,partner_state)



        self.dst_edit.clear()
        self.src_edit.clear()
        self.data_edit.clear()

    def on_click(self):
        dst = self.dst_edit.text()
        src = self.src_edit.text()



        match = re.fullmatch(r'([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}',dst)
        match2 = re.fullmatch(r'([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}', src)
        if (match and match2):

            if not((self.actor_radioButton.isChecked()) and (self.partner_radioButton.isChecked())):
                self.add_row()
            else:
                msg = QtWidgets.QMessageBox()
                msg.setWindowTitle("Ошибка")
                msg.setText("Нельзя делать actor passive и partner passive")
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
                msg.exec_()
        elif not(match and match2):
            msg = QtWidgets.QMessageBox()
            msg.setWindowTitle("Ошибка")
            msg.setText("Неправильно введены данные")
            msg.setIcon(QtWidgets.QMessageBox.Warning)
            msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
            msg.exec_()

    def on_click_clear(self):
        self.tableWidget.setRowCount(0)



def GUI():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
